# ===================================
# GAMEPULSE ENVIRONMENT VARIABLES
# ===================================
# Copy this file to .env.local and fill in your values
# NEVER commit .env.local to git!

# ===================================
# DATABASE CONFIGURATION
# ===================================

# For Development: SQLite (Uncomment line below)
# DATABASE_URL="file:./prisma/dev.db"

# For Production: PostgreSQL (Required for Vercel deployment)
# Get from: https://neon.tech or any PostgreSQL provider
DATABASE_URL="postgresql://username:password@host:port/database?schema=public"

# Example Neon Database URL:
# DATABASE_URL="postgresql://user:pass@ep-xxx-xxx.us-east-1.aws.neon.tech/neondb?sslmode=require"

# ===================================
# NEXTAUTH CONFIGURATION
# ===================================

# Generate secret dengan command:
# node -e "console.log(require('crypto').randomBytes(32).toString('base64'))"
# atau: openssl rand -base64 32
NEXTAUTH_SECRET="your-generated-secret-key-minimum-32-characters"

# URL aplikasi Anda
# Development: http://localhost:3000
# Production: https://yourdomain.com
NEXTAUTH_URL="http://localhost:3000"

# ===================================
# FIREBASE CONFIGURATION
# ===================================
# Get from Firebase Console > Project Settings > Service Accounts
# Download Service Account JSON file, then extract these values:

# Firebase Project ID
# Example: "gamepulse-production"
FIREBASE_PROJECT_ID="your-firebase-project-id"

# Firebase Client Email (from Service Account)
# Example: "firebase-adminsdk-xxxxx@your-project.iam.gserviceaccount.com"
FIREBASE_CLIENT_EMAIL="your-firebase-client-email"

# Firebase Private Key (from Service Account JSON)
# IMPORTANT: Copy the entire private key including header/footer
# Example: "-----BEGIN PRIVATE KEY-----\nYour...Key...Here\n-----END PRIVATE KEY-----"
FIREBASE_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\nyour-private-key-here\n-----END PRIVATE KEY-----"

# ===================================
# GOOGLE OAUTH (OPTIONAL)
# ===================================
# Get from Firebase Console > Authentication > Sign-in method > Google
# Or from: https://console.cloud.google.com/apis/credentials

# Google OAuth Client ID
# Example: "123456789-xxxxxxxxxxxxxxx.apps.googleusercontent.com"
GOOGLE_CLIENT_ID="your-google-client-id.apps.googleusercontent.com"

# Google OAuth Client Secret
GOOGLE_CLIENT_SECRET="your-google-client-secret"

# ===================================
# ADMIN DEFAULT CREDENTIALS
# ===================================
# Default admin account for first-time setup
# CHANGE THESE IMMEDIATELY after first login!

ADMIN_DEFAULT_USERNAME="admin"
ADMIN_DEFAULT_PASSWORD="admin123"

# ===================================
# PAYMENT GATEWAY (OPTIONAL)
# ===================================
# Uncomment and fill when integrating payment gateway

# Midtrans Configuration
# MIDTRANS_SERVER_KEY="your-midtrans-server-key"
# MIDTRANS_CLIENT_KEY="your-midtrans-client-key"
# MIDTRANS_IS_PRODUCTION="false"

# Xendit Configuration
# XENDIT_API_KEY="your-xendit-api-key"
# XENDIT_WEBHOOK_TOKEN="your-xendit-webhook-token"

# ===================================
# DIGIFLAZZ API (GAME USER VALIDATION & AUTO TOP-UP)
# ===================================
# For real-time User ID validation and automatic top-up
# Sandbox: FREE (unlimited testing)
# Production: Minimum deposit Rp 10.000

# Digiflazz Username (from dashboard)
DIGIFLAZZ_USERNAME="your-digiflazz-username"

# Digiflazz API Key
# Sandbox: Use "dev"
# Production: Use your actual API key from dashboard
DIGIFLAZZ_API_KEY="dev"

# Sandbox Mode (true for testing, false for production)
DIGIFLAZZ_SANDBOX="true"

# Setup Guide:
# 1. Register at: https://member.digiflazz.com/buyer-register
# 2. Login and get your username
# 3. Use "dev" as API key for sandbox testing
# 4. After testing, deposit min Rp 10.000 for production
# 5. Get production API key from dashboard
# 6. Set DIGIFLAZZ_SANDBOX="false" for production
#
# See DIGIFLAZZ_INTEGRATION.md for complete guide

# ===================================
# EMAIL SERVICE (OPTIONAL)
# ===================================
# For sending transaction notifications

# SMTP Configuration
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT="587"
# SMTP_USER="your-email@gmail.com"
# SMTP_PASSWORD="your-app-password"
# SMTP_FROM="noreply@yourdomain.com"

# ===================================
# MONITORING & ANALYTICS (OPTIONAL)
# ===================================

# Sentry for Error Tracking
# SENTRY_DSN="your-sentry-dsn"

# Google Analytics
# NEXT_PUBLIC_GA_ID="G-XXXXXXXXXX"

# ===================================
# NOTES & TIPS
# ===================================
#
# 1. SECURITY:
#    - NEVER commit this file with real values to git
#    - Use different secrets for dev/staging/production
#    - Rotate secrets every 90 days
#    - Use strong passwords (min 32 characters for secrets)
#
# 2. FIREBASE SETUP:
#    - Create project at: https://console.firebase.google.com
#    - Enable Authentication > Email/Password & Google
#    - Download Service Account from Project Settings
#    - Extract values from downloaded JSON
#
# 3. DATABASE SETUP:
#    - For development: Use SQLite (easier setup)
#    - For production: Use PostgreSQL (Neon, Supabase, etc)
#    - Run migrations: npm run db:migrate
#    - Seed database: npm run db:seed
#
# 4. NEXTAUTH_SECRET:
#    - Must be at least 32 characters
#    - Generate with: openssl rand -base64 32
#    - Use different secret for each environment
#
# 5. TESTING:
#    - Test with development values first
#    - Verify all features work before production
#    - Use Firebase emulators for local testing
#
# 6. DEPLOYMENT:
#    - Set all variables in Vercel dashboard
#    - Use Vercel's Environment Variables feature
#    - Separate values for Production/Preview/Development
#
# For detailed setup guide, see: INSTALLATION.md
# For security best practices, see: SECURITY.md

